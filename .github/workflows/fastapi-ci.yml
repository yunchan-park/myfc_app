name: FastAPI CI/CD

on:
  push:
    branches: [ master, develop ]
    paths: [ 'backend/**' ]
  pull_request:
    branches: [ master ]
    paths: [ 'backend/**' ]

jobs:
  test:
    name: 🧪 Test FastAPI Server
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    
    defaults:
      run:
        working-directory: backend
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🔍 Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: 🧪 Run tests with pytest
      run: |
        python -m pytest app/tests/ -v --cov=app --cov-report=xml --cov-report=html
        
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./backend/coverage.xml
        name: fastapi-coverage
        fail_ci_if_error: false

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: backend
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety bandit
        
    - name: 🔍 Run safety check
      run: safety check
      
    - name: 🔍 Run bandit security scan
      run: bandit -r app/ -f json -o bandit-report.json || true
      
    - name: 📤 Upload security scan results
      uses: actions/upload-artifact@v3
      with:
        name: security-scan-results
        path: backend/bandit-report.json 